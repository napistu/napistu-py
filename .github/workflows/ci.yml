name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black ruff
        pip install -e ".[dev,mcp]"
        
    - name: Check formatting with Black
      run: black --check --diff .
        
    - name: Lint with Ruff
      run: ruff check . --output-format=github

  test:
    name: Test (${{ matrix.os }}, Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']
        include:
          # Test multiple Python versions on Ubuntu only
          - os: ubuntu-latest
            python-version: '3.12'
          - os: ubuntu-latest
            python-version: '3.13'
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/setup.cfg', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-
        
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 15  # Increased timeout
        max_attempts: 3
        retry_on: error
        command: |
          python -m pip install --upgrade pip
          pip config set global.timeout 600
          pip config set global.retries 3
          
          # Install pandas from wheel first to avoid building from source
          pip install --only-binary=all pandas || pip install pandas
          
          # Install other dependencies
          pip install pytest pytest-cov
          pip install -e ".[dev,mcp]" --prefer-binary
        
    - name: Run tests with coverage
      run: |
        pytest --cov=src --cov-report=term-missing --cov-report=xml -v
        
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false